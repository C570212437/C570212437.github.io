<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Django CRM实战|Day3：注册-验证-登录模块实现</title>
      <link href="2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/"/>
      <url>2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>实现用户注册，用户名邮箱合法性检查，用户名密码验证，登录的功能。涉及前端的js和后端数据库的操作。</p><span id="more"></span><p>登录模块是一个应用，而目前为止我们所创建的是一个项目，因此需要首先创建一个应用。</p><h1 id="为你的系统创建一个系统应用"><a href="#为你的系统创建一个系统应用" class="headerlink" title="为你的系统创建一个系统应用"></a>为你的系统创建一个系统应用</h1><hr><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled.png" class=""><p>DJango会在项目下生成一个<code>manage.py</code>的文件，在该文件的路径下运行如下代码，可以生成一个应用：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled1.png" class=""><h2 id="在Setting-py中配置应用"><a href="#在Setting-py中配置应用" class="headerlink" title="在Setting.py中配置应用"></a>在Setting.py中配置应用</h2><p>这步会导致报错，不进行反而能按照预期正常运行</p><p>在Setting.py文件的<code>INSTALLED_APPS</code>下增加我们新建的<code>system</code>应用：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled2.png" class=""><h2 id="在url-py中进行配置"><a href="#在url-py中进行配置" class="headerlink" title="在url.py中进行配置"></a>在url.py中进行配置</h2><p>按照如下方式配置<code>url.py</code>：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled3.png" class=""><p>这里的意思是：</p><ul><li>如果url为<code>admin/</code>，将被转向<code>admin.site.urls</code></li><li>否则url将被转向<code>system</code>应用下的urls文件进行匹配</li></ul><h3 id="函数path"><a href="#函数path" class="headerlink" title="函数path"></a>函数path</h3><p>函数 <code>path()</code> 具有四个参数：</p><ul><li>route：route 是一个匹配 URL 的准则（类似正则表达式）。当 Django 响应一个请求时，它会从 urlpatterns 的第一项开始，按顺序依次匹配列表中的项，直到找到匹配的项。</li><li>view：当 Django 找到了一个匹配的准则，就会调用这个特定的视图函数，并传入一个 HttpRequest 对象作为第一个参数，被“捕获”的参数以关键字参数的形式传入。</li><li>kwargs(*)：任意个关键字参数可以作为一个字典传递给目标视图函数。</li><li>name(*)：为你的 URL 取名能使你在 Django 的任意地方唯一地引用它，尤其是在模板中。这个有用的特性允许你只改一个文件就能全局地修改某个 URL 模式。</li></ul><h1 id="定义登录功能"><a href="#定义登录功能" class="headerlink" title="定义登录功能"></a>定义登录功能</h1><hr><p>在Django框架下开发一项功能，从后端到前端的流程应该是：<br>SQL → 视图 → 映射 → 模板 → 测试<br>下面我们将遵循这样的流程顺序进行开发。</p><p>这里将使得我们的应用能够跳转到登录界面，并实现一些登录名密码验证的功能，那么我们首先需要有一个html界面，可以实现最基本的用户名、密码输入的功能，这里附上一个免费的前端模板库，可以在里面找到现成的登录界面以便快速开始开发。</p><p><a href="https://www.mycodes.net/192/">注册模板 - 网站模板 - 源码之家</a></p><p>下载下来的界面会是<code>html</code>格式的文件，将该文件放到项目的<code>template</code>文件夹下，同时可能附带一些CSS文件或者其他资源，这些资源一概放到<code>static</code>文件夹下。</p><h2 id="定义用户的模型"><a href="#定义用户的模型" class="headerlink" title="定义用户的模型"></a>定义用户的模型</h2><p>在登录模块，最主要的模型就是用户（账号），这里我们找到项目中<code>system</code>文件夹下的<code>models.py</code>文件，在其中对用户进行定义。</p><p>新建一个<code>User</code>类，简单地定义它由「用户名」，「密码」和「创建时间」三种信息构成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">models.Model</span>):</span></span><br><span class="line">    user_name = models.CharField(max_length=<span class="number">30</span>, db_column=<span class="string">&#x27;user_name&#x27;</span>)</span><br><span class="line">    password = models.CharField(max_length=<span class="number">30</span>)</span><br><span class="line">    create_time = models.DateTimeField(default=datetime.now().date())</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接到user表</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">        db_table = <span class="string">&#x27;user&#x27;</span></span><br></pre></td></tr></table></figure><p>注意这里字段的类型和长度设定需要与数据库中相一致：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled4.png" class=""><h2 id="定义视图"><a href="#定义视图" class="headerlink" title="定义视图"></a>定义视图</h2><p>修改<code>views.py</code>文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="comment">#跳转页面</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&#x27;login.html&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="定义映射"><a href="#定义映射" class="headerlink" title="定义映射"></a>定义映射</h2><p>在<code>system</code>下新建一个<code>url.py</code>，按如下方式配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">app_name =<span class="string">&#x27;system&#x27;</span></span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, views.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>此时登录界面已完成，运行项目，在浏览器输入<a href="http://127.0.0.1:8000/">http://127.0.0.1:8000/</a>login/就可以从服务器访问我们的登录界面，例如我在自己的电脑上访问改地址：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled5.png" class=""><p>有时会碰到html页面在本地显示正常在服务器上却没有更新的情况，这时候清理浏览器缓存或许可以解决</p><h1 id="注册验证"><a href="#注册验证" class="headerlink" title="注册验证"></a>注册验证</h1><hr><h2 id="注册名、邮箱及密码合法性验证"><a href="#注册名、邮箱及密码合法性验证" class="headerlink" title="注册名、邮箱及密码合法性验证"></a>注册名、邮箱及密码合法性验证</h2><p>这里我们将实现注册时的验证问题，简单地实现四个合法性判断：</p><ul><li>账号不为空</li><li>邮箱不为空，且格式正确</li><li>密码不为空</li><li>确认密码需与密码一致</li></ul><p>实现的逻辑为，首先从页面中获取用户的输入，将其赋值到某一变量，判断变量是否符合我们的标准。</p><p><strong>那么如何找到页面中用户的输入呢？</strong></p><p>以用户名为例，首先在chrome中打开我们的页面，在页面上右键选择「检视」，进入开发者模式。</p><p>选中用户名输入框发现定位到如下位置：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled6.png" class=""><p>说明用户名输入框的<code>id</code>为<code>user</code>，下面我们就可以通过这个id对用户名进行读取。</p><ol><li>下面实现判断用户名是否为空。</li></ol><p>该判断应该在用户完成输入，也就是用户先选中用户名输入框，完成输入后再将焦点转向其他位置时进行。这就要用到JS的模糊焦点功能，需要首先导入jquery依赖，即将所需要的js文件放在项目内，然后在html文档内调用，js文件一般在下载下来的模板中有，或可以自行搜索下载。示例代码如下：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--导入jquery支持--&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../static/js/jquery-3.5.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../static/js/jquery.cookie.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="comment">//验证注册合法性</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="function"><span class="keyword">function</span> <span class="title">check_username</span>(<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        user_name = $(<span class="string">&#x27;#username_reg&#x27;</span>).val(); <span class="comment">//$是getelementbyid的一种简便写法</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">if</span>($.trim(user_name)==<span class="string">&#x27;&#x27;</span>||$.trim(user_name)==<span class="literal">null</span>)&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;用户名不能为空&#x27;</span>); <span class="comment">//notice是我自己添加的一个span标签，用来显示文本提示</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">return</span> <span class="literal">false</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">else</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            $(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>);<span class="comment">//检测到用户名不为空后将提示清空</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="keyword">return</span> <span class="literal">true</span>;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">$(<span class="string">&#x27;#username_reg&#x27;</span>).on(<span class="string">&#x27;blur&#x27;</span>, check_username);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>注意该段代码必须写在主体部分<body>之外。</p><p>这里涉及到一个相对路径的问题，我把<code>.js</code>文件放在static文件夹下的js文件夹内，这些文件与<code>login.html</code>界面的层级关系如下图所示，<code>login.html</code>要访问到js文件，必须要先返回上级目录再进入js目录：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../<span class="keyword">static</span>/js/jquery-<span class="number">3.5</span><span class="number">.1</span>.min.js</span><br></pre></td></tr></table></figure><p><code>../</code>表示进入返回上级目录，<code>./</code>表示同级目录</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/1624114436(1).png" class=""><ol start="2"><li>对于邮箱，除了判断是否为空外，还要验证邮箱格式是否符合<a href="mailto:&#120;&#120;&#x40;&#x78;&#120;&#46;&#x78;&#x78;">&#120;&#120;&#x40;&#x78;&#120;&#46;&#x78;&#x78;</a>的样式，一般用正则表达式实现：</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">functioncheck_email</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    email =$(<span class="string">&#x27;#email_reg&#x27;</span>).val();</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="regexp">/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/</span>;</span><br><span class="line">    <span class="keyword">if</span>($.trim(email)==<span class="string">&#x27;&#x27;</span>||$.trim(email)==<span class="literal">null</span>)&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;邮箱不能为空&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!reg.test(email))&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;请输入正确格式的邮箱&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">&#x27;#email_reg&#x27;</span>).on(<span class="string">&#x27;blur&#x27;</span>, check_email);</span><br></pre></td></tr></table></figure><p>注意这些代码都必须在导入的js依赖里。</p><ol start="3"><li>接着验证密码是否为空：</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">functioncheck_password</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    pass_word =$(<span class="string">&#x27;#password_reg&#x27;</span>).val();</span><br><span class="line">    <span class="keyword">if</span> ($.trim(pass_word)==<span class="string">&#x27;&#x27;</span>||$.trim(pass_word)==<span class="literal">null</span>)&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;密码不能为空&#x27;</span>);</span><br><span class="line">&#123;#alert(<span class="string">&#x27;密码不能为空&#x27;</span>);#&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">&#x27;#password_reg&#x27;</span>).on(<span class="string">&#x27;blur&#x27;</span>, check_password);</span><br></pre></td></tr></table></figure><ol start="4"><li>验证确认密码是否与密码一致：</li></ol><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">functioncheck_confirm_password</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    pass_word =$(<span class="string">&#x27;#password_reg&#x27;</span>).val();</span><br><span class="line">    confirm_pass_word =$(<span class="string">&#x27;#con_password_reg&#x27;</span>).val();</span><br><span class="line">    <span class="keyword">if</span> ($.trim(confirm_pass_word)!=pass_word)&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;密码不一致&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">&#x27;#con_password_reg&#x27;</span>).on(<span class="string">&#x27;blur&#x27;</span>, check_confirm_password);</span><br></pre></td></tr></table></figure><h2 id="验证用户名是否唯一"><a href="#验证用户名是否唯一" class="headerlink" title="验证用户名是否唯一"></a>验证用户名是否唯一</h2><p>验证用户名是否唯一，需要从前端获取用户输入，再发送给服务器的数据库进行验证。在代码逻辑上，我们将从页面<code>login.html</code>获取输入，通过ajax发送给服务器，在<code>views.py</code>中实现对发送数据的获取以及在服务器中的查询，然后将查询的结果返回前端<code>login.html</code>进行相应的输出。</p><p><strong>在<code>views.py</code>中新增视图：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.views.decorators.http <span class="keyword">import</span> require_POST</span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证用户名是否唯一</span></span><br><span class="line"><span class="meta">@require_POST</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unique</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment">#接收参数</span></span><br><span class="line">        <span class="built_in">type</span> = request.POST.get(<span class="string">&#x27;check_type&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span>==<span class="string">&#x27;username&#x27;</span>:</span><br><span class="line">            user_name = request.POST.get(<span class="string">&#x27;info&#x27;</span>)</span><br><span class="line">            <span class="comment">#查询用户</span></span><br><span class="line">            user = User.objects.get(user_name = user_name)</span><br><span class="line">            <span class="comment">#有用户返回页面json</span></span><br><span class="line">            <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">400</span>, <span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;验证失败&#x27;</span>&#125;)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">type</span>==<span class="string">&#x27;email&#x27;</span>:</span><br><span class="line">            email = request.POST.get(<span class="string">&#x27;info&#x27;</span>)</span><br><span class="line">            email_ = User.objects.get(email = email)</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;code&#x27;</span>: <span class="number">400</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;验证失败&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">except</span> User.DoesNotExist <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>, <span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;验证成功&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>进行后续步骤前，我们先验证是否能成功连接到数据库并从中读取数据：</p><ol><li>在Terminal中输入<code>python [manage.py](http://manage.py) shell</code> 进入python环境</li><li>输入<code>from system.models import User</code></li><li>输入<code>User.objects.get(user_name=&#39;abc123&#39;)</code>，随便输入一个数据库中有的用户名进行测试</li></ol><p>返回如下内容说明连接成功：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User.objects.get(user_name = <span class="string">&#x27;abc123&#x27;</span>)</span><br><span class="line">&lt;User: User <span class="built_in">object</span> (<span class="number">1</span>)&gt;</span><br></pre></td></tr></table></figure><p>这里有可能会出现<code>pymysql.err.OperationalError: (1054, &quot;Unknown column &#39;[user.id](http://user.id/)&#39; in &#39;field list&#39;&quot;)</code>报错。</p><p>这是因为Django默认所连接的数据表中有一个<code>表名.id</code>字段作为外键，最简便的解决方法就是在表设计时手动添加id字段。</p><p><strong>下面开始在login.html中进行修改</strong></p><p>首先在文件头加载静态资源：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load <span class="keyword">static</span> %&#125;</span><br></pre></td></tr></table></figure><p>接着在用户名的check函数中进行如下修改：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//验证注册合法性</span></span><br><span class="line"><span class="function"><span class="title">functioncheck_username</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    user_name =$(<span class="string">&#x27;#username_reg&#x27;</span>).val();<span class="comment">//$是getelementbyid的一种简便写法</span></span><br><span class="line"><span class="keyword">if</span>($.trim(user_name)==<span class="string">&#x27;&#x27;</span>||$.trim(user_name)==<span class="literal">null</span>)&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;用户名不能为空&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;&#123;% url &#x27;</span>system:unique<span class="string">&#x27; %&#125;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>: $.cookie(<span class="string">&#x27;csrftoken&#x27;</span>),</span><br><span class="line">                <span class="string">&#x27;info&#x27;</span>: user_name,</span><br><span class="line">                <span class="string">&#x27;check_type&#x27;</span>: <span class="string">&#x27;username&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;dataType&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;success&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(result.code==<span class="number">400</span>)&#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;该用户名已存在！&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;error&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意<code>&#39;csrfmiddlewaretoken&#39;: $.cookie(&#39;csrftoken&#39;)</code>用到了cookie，所以需要引入jquery.cookie资源：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;../static/js/jquery.cookie.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>同时需要在文件头声明<code>&#123;% csrf_token %&#125;</code>。</p><p>此外还需要在<code>system</code>应用下的<code>urls.py</code>文件进行相应的配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, views.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;unique/&#x27;</span>, views.unique, name=<span class="string">&#x27;unique&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>这样一来，当完成用户名输入后，应用就会在后台数据库查询用户名是否存在并返回相应的提示：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled7.png" class=""><p>邮箱的check函数也可以进行同样的修改：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">functioncheck_email</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    email =$(<span class="string">&#x27;#email_reg&#x27;</span>).val();</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="regexp">/^\w+((-\w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/</span>;</span><br><span class="line">    <span class="keyword">if</span>($.trim(email)==<span class="string">&#x27;&#x27;</span>||$.trim(email)==<span class="literal">null</span>)&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;邮箱不能为空&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!reg.test(email))&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;请输入正确格式的邮箱&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;&#123;% url &#x27;</span>system:unique<span class="string">&#x27; %&#125;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>: $.cookie(<span class="string">&#x27;csrftoken&#x27;</span>),</span><br><span class="line">                <span class="string">&#x27;info&#x27;</span>: email,</span><br><span class="line">                <span class="string">&#x27;check_type&#x27;</span>: <span class="string">&#x27;email&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;dataType&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;success&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(result.code==<span class="number">400</span>)&#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">$(<span class="string">&#x27;#notice&#x27;</span>).html(<span class="string">&#x27;该邮箱已存在！&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;error&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="注册按钮事件"><a href="#注册按钮事件" class="headerlink" title="注册按钮事件"></a>注册按钮事件</h2><p>检查完合法性与唯一性后，用户点击按钮触发注册事件，前端将用户输入的信息发送到服务器，服务器将这些信息写入后端数据库。实现的代码逻辑与上一步类似。</p><p>首先在<code>views.py</code>文件定义注册函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@require_POST</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">register</span>(<span class="params">request</span>):</span></span><br><span class="line"><span class="comment">#接收参数</span></span><br><span class="line">username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">    email = request.POST.get(<span class="string">&#x27;email&#x27;</span>)</span><br><span class="line">    password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">    User.objects.create(user_name=username, password=password, email=email)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>,<span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;注册成功！&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>接着在<code>login.html</code>中定义按钮触发事件：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按钮点击后注册</span></span><br><span class="line">$(<span class="string">&#x27;#register_btn&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> flag =check_username();</span><br><span class="line">    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> flag =check_email();</span><br><span class="line">    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> flag =check_password();</span><br><span class="line">    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> flag =check_confirm_password();</span><br><span class="line">    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    user_name =$(<span class="string">&#x27;#username_reg&#x27;</span>).val();</span><br><span class="line">    email =$(<span class="string">&#x27;#email_reg&#x27;</span>).val();</span><br><span class="line">    password =$(<span class="string">&#x27;#password_reg&#x27;</span>).val();</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;&#123;% url &#x27;</span>system:register<span class="string">&#x27; %&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;data&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>: $.cookie(<span class="string">&#x27;csrftoken&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: user_name,</span><br><span class="line">            <span class="string">&#x27;email&#x27;</span>: email,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: password</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;dataType&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;success&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(result.code==<span class="number">200</span>)&#123;</span><br><span class="line">alert(<span class="string">&#x27;恭喜你，注册成功&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;#username_reg&#x27;</span>).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;#email_reg&#x27;</span>).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;#password_reg&#x27;</span>).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">$(<span class="string">&#x27;#con_password_reg&#x27;</span>).val(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;error&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>配置urls.py文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, views.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;unique/&#x27;</span>, views.unique, name=<span class="string">&#x27;unique&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;register/&#x27;</span>, views.register, name=<span class="string">&#x27;register&#x27;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>此时，当用户名、邮箱与密码输入正确时，前端会弹窗提示，后台能够成功写入。</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled8.png" class=""><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day3%EF%BC%9A%E6%B3%A8%E5%86%8C-%E9%AA%8C%E8%AF%81-%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0/Untitled9.png" class=""><h1 id="登录功能"><a href="#登录功能" class="headerlink" title="登录功能"></a>登录功能</h1><hr><p>登录功能的实现逻辑与注册差不多，这里不多加赘述。</p><p>在<code>views.py</code>中的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#跳转到主界面的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">layout</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">return</span> render(request,<span class="string">&#x27;layout.html&#x27;</span>) //layout.html是主界面文件，请自行添加到template文件夹中</span><br><span class="line"></span><br><span class="line"><span class="meta">@require_POST</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login_check</span>(<span class="params">request</span>):</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">    <span class="comment">#接收参数</span></span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line">        user = User.objects.get(user_name=username, password=password)</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">200</span>, <span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;登录成功！&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">except</span> User.DoesNotExist <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;code&#x27;</span>:<span class="number">400</span>, <span class="string">&#x27;msg&#x27;</span>:<span class="string">&#x27;用户名或密码错误！&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>在<code>login.html</code>中的代码：</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*实现登录功能</span></span><br><span class="line"><span class="comment">* 1.像注册一样在输入完成后验证用户名的合法性</span></span><br><span class="line"><span class="comment">* 2.按钮点击事件触发后捕获登录名和密码，发送给服务器，在数据库中进行查询，与数据库中账号密码一致则通过</span></span><br><span class="line"><span class="comment">* 3.通过后跳转至主界面*/</span></span><br><span class="line"><span class="comment">//验证用户名不为空，且在数据库中存在</span></span><br><span class="line"><span class="function"><span class="title">functioncheck_username_login</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    user_name =$(<span class="string">&#x27;#username_login&#x27;</span>).val();<span class="comment">//$是getelementbyid的一种简便写法</span></span><br><span class="line"><span class="keyword">if</span>($.trim(user_name)==<span class="string">&#x27;&#x27;</span>||$.trim(user_name)==<span class="literal">null</span>)&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice_login&#x27;</span>).html(<span class="string">&#x27;用户名不能为空&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice_login&#x27;</span>).html(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;&#123;% url &#x27;</span>system:unique<span class="string">&#x27; %&#125;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;data&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>: $.cookie(<span class="string">&#x27;csrftoken&#x27;</span>),</span><br><span class="line">                <span class="string">&#x27;info&#x27;</span>: user_name,</span><br><span class="line">                <span class="string">&#x27;check_type&#x27;</span>: <span class="string">&#x27;username&#x27;</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;dataType&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;success&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(result.code==<span class="number">200</span>)&#123;</span><br><span class="line">                    flag = <span class="literal">false</span>;</span><br><span class="line">$(<span class="string">&#x27;#notice_login&#x27;</span>).html(<span class="string">&#x27;该用户名不存在！&#x27;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&#x27;error&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(result);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用户名输入框焦点丢失事件，验证用户名是否为空，以及用户名是否存在</span></span><br><span class="line">$(<span class="string">&#x27;#username_login&#x27;</span>).on(<span class="string">&#x27;blur&#x27;</span>,check_username_login);</span><br><span class="line"></span><br><span class="line">$(<span class="string">&#x27;#login&#x27;</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> flag =check_username_login();</span><br><span class="line">    <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    user_name =$(<span class="string">&#x27;#username_login&#x27;</span>).val();</span><br><span class="line">    password =$(<span class="string">&#x27;#password_login&#x27;</span>).val();</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        <span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;&#123;% url &#x27;</span>system:login_check<span class="string">&#x27; %&#125;&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;data&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;csrfmiddlewaretoken&#x27;</span>: $.cookie(<span class="string">&#x27;csrftoken&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: user_name,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: password</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&#x27;dataType&#x27;</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;success&#x27;</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(result.code==<span class="number">200</span>)&#123;</span><br><span class="line">                <span class="built_in">window</span>.location.href = <span class="string">&#x27;/layout/&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(result.code==<span class="number">400</span>)&#123;</span><br><span class="line">$(<span class="string">&#x27;#notice_login&#x27;</span>).html(<span class="string">&#x27;用户名或密码错误&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在<code>urls.py</code>中的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;login/&#x27;</span>, views.login, name=<span class="string">&#x27;login&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;unique/&#x27;</span>, views.unique, name=<span class="string">&#x27;unique&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;register/&#x27;</span>, views.register, name=<span class="string">&#x27;register&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;layout/&#x27;</span>, views.layout, name=<span class="string">&#x27;layout&#x27;</span>),</span><br><span class="line">    path(<span class="string">&#x27;login_check/&#x27;</span>, views.login_check, name=<span class="string">&#x27;login_check&#x27;</span>)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>至此已经能够实现注册-登录成功后跳转到主界面的功能。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django CRM实战|Day2：Django环境搭建</title>
      <link href="2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>Pycharm下的Django项目配置，包括后端数据库的连接。</p><span id="more"></span><h1 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h1><hr><p>Pycharm新建Django项目。</p><p>这里在Pycharm新建项目界面可能会找不到Django的选项，原因是版本问题。直接新建Django项目是Pycharm专业版的功能，社区版没有这个功能，界面长得和网上的教程也不太一样，需要重新下载专业版。</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/screely-1622982605470.png" class=""><p>选择Django项目，Pycharm会自动安装Django。</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Untitled.png" class=""><h1 id="配置Setting-py文件"><a href="#配置Setting-py文件" class="headerlink" title="配置Setting.py文件"></a>配置Setting.py文件</h1><hr><p>Pycharm会在新建的Django项目下生成一个<code>setting.py</code>文件，这一步需要对<code>setting</code>文件中关于数据库的设定进行修改。</p><h2 id="修改数据库配置"><a href="#修改数据库配置" class="headerlink" title="修改数据库配置"></a>修改数据库配置</h2><p>首先将<code>DATABASES</code>中default的内容注释掉。</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Untitled1.png" class=""><p>由于我们使用的是mysql，需要将<code>ENGINE</code>改成<code>django.db.backend.mysql</code>。</p><p>接着需要填充我们事先建立好的数据库的信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line"><span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line"><span class="comment"># &#x27;ENGINE&#x27;: &#x27;django.db.backends.sqlite3&#x27;,</span></span><br><span class="line">        <span class="comment"># &#x27;NAME&#x27;: BASE_DIR / &#x27;db.sqlite3&#x27;,</span></span><br><span class="line"><span class="string">&#x27;ENGINE&#x27;</span>:<span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;NAME&#x27;</span>:<span class="string">&#x27;crm&#x27;</span>,<span class="comment">#数据库名</span></span><br><span class="line"><span class="string">&#x27;USER&#x27;</span>:<span class="string">&#x27;root&#x27;</span>,<span class="comment">#数据库用户名，本机一般为root</span></span><br><span class="line"><span class="string">&#x27;PASSWORD&#x27;</span>:<span class="string">&#x27;&#x27;</span>,<span class="comment">#数据库密码</span></span><br><span class="line"><span class="string">&#x27;HOST&#x27;</span>:<span class="string">&#x27;127.0.0.1&#x27;</span>,<span class="comment">#数据库连接ip，一般不需要改动</span></span><br><span class="line"><span class="string">&#x27;PORT&#x27;</span>:<span class="string">&#x27;3306&#x27;</span>,<span class="comment">#端口，一般不需要改动</span></span><br><span class="line"><span class="string">&#x27;ATOMATIC_REQUESTS&#x27;</span>: <span class="literal">True</span><span class="comment">#全局生效自动提交事务</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="修改时区设定"><a href="#修改时区设定" class="headerlink" title="修改时区设定"></a>修改时区设定</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE_TZ = <span class="literal">False</span> <span class="comment">#使用系统当前时间</span></span><br></pre></td></tr></table></figure><h2 id="打印日志"><a href="#打印日志" class="headerlink" title="打印日志"></a>打印日志</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">LOGGING = &#123;</span><br><span class="line">&#x27;version&#x27;: 1,</span><br><span class="line">&#x27;disable_existing_loggers&#x27;: False,</span><br><span class="line">&#x27;formatters&#x27;: &#123;</span><br><span class="line">&#x27;verbose&#x27;: &#123;</span><br><span class="line">&#x27;format&#x27;:&#x27;[%(asctime)s] [%(levelname)s] %(message)s&#x27;</span><br><span class="line">&#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#x27;handlers&#x27;: &#123;</span><br><span class="line">&#x27;console&#x27;:&#123;</span><br><span class="line">&#x27;level&#x27;:&#x27;INFO&#x27;,</span><br><span class="line">&#x27;class&#x27;:&#x27;logging.StreamHandler&#x27;,</span><br><span class="line">&#x27;formatter&#x27;:&#x27;verbose&#x27;</span><br><span class="line">&#125;,</span><br><span class="line">&#x27;file&#x27;: &#123;</span><br><span class="line">&#x27;level&#x27;:&#x27;INFO&#x27;,</span><br><span class="line">&#x27;class&#x27;:&#x27;logging.FileHandler&#x27;,</span><br><span class="line">&#x27;filename&#x27;:&#x27;D:/monitor.log&#x27;,</span><br><span class="line">&#x27;formatter&#x27;:&#x27;verbose&#x27;</span><br><span class="line">&#125;,</span><br><span class="line">&#x27;email&#x27;: &#123;</span><br><span class="line">&#x27;level&#x27;:&#x27;ERROR&#x27;,</span><br><span class="line">&#x27;class&#x27;:&#x27;django.utils.log.AdminEmailHandler&#x27;,</span><br><span class="line">&#x27;include_html&#x27;: True,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#x27;loggers&#x27;: &#123;</span><br><span class="line">&#x27;django&#x27;: &#123;</span><br><span class="line">&#x27;handlers&#x27;: [&#x27;console&#x27;,&#x27;file&#x27;,&#x27;email&#x27;],</span><br><span class="line">&#x27;level&#x27;:&#x27;INFO&#x27;,</span><br><span class="line">&#x27;propagate&#x27;: True,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="配置静态资源"><a href="#配置静态资源" class="headerlink" title="配置静态资源"></a>配置静态资源</h1><hr><p>配置资源的存放路径。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL =&#x27;/static/&#x27;</span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR,&#x27;static&#x27;),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>同时在根目录下创建<code>static</code>文件夹。</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Untitled2.png" class=""><p>配置完成后将静态资源拖入<code>static</code>文件夹，将html页面拖入<code>template</code>文件夹。</p><p>在html页面的头部添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&#123;%load static%&#125;</span><br></pre></td></tr></table></figure><p>如果html页面引用了本地的资源，则需要将引用的路径进行修改。</p><h1 id="配置-ignore文件"><a href="#配置-ignore文件" class="headerlink" title="配置.ignore文件"></a>配置.ignore文件</h1><hr><ol><li>生成<code>.ignore</code>文件</li></ol><p>Pycharm中通过<code>.ignore</code>插件进行配置，步骤为：</p><p>右键项目 - new - .ignore file - .gitignore file - 搜索Python - 选中 - Generate</p><p>配置完成后可以看到根目录下生成了一个.gitignore文件</p><p>如果找不到<code>.ignore</code>选项说明还未安装该插件，通过以下步骤进行安装：</p><p>File - Setting - Plugins - 搜索ignore进行安装</p><ol start="2"><li>修改.gitignore文件</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### Python template</span></span><br><span class="line"><span class="comment"># Byte-compiled / optimized / DLL files</span></span><br><span class="line">__pycache__/</span><br></pre></td></tr></table></figure><p>将除上述内容以外的代码删除，并输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.idea/</span><br></pre></td></tr></table></figure><h1 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h1><hr><p>工具栏选中<code>VCS</code> - <code>Create git Repository</code> - 选择自己的项目，此时项目会变成一个git项目。</p><p>右键项目 - <code>git</code> - <code>manage remotes</code> - 添加自己的仓库地址。如果未安装git，Pycharm会提示进行安装。</p><p>选中项目中的所有文件进行<code>add</code> -  右键项目 - <code>git</code> - <code>commit directory</code>。此时窗口如下图所示：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Untitled3.png" class=""><p>当项目更新时，可以对更新的内容进行commit，在下方框中填写commit信息（随便填），进行<code>commit and push</code>。</p><p>之后就可以按照同样的流程将自己的代码上传到远程仓库啦~</p><h1 id="运行测试"><a href="#运行测试" class="headerlink" title="运行测试"></a>运行测试</h1><hr><p>至此环境已经搭建完成，点击右上角工具栏中的Run运行项目，可以看到下方的控制台出现如下提示：</p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/Untitled4.png" class=""><p>说明Django项目已部署成功，点击<a href="http://127.0.0.1:8000/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%A6%82%E4%B8%8B%E7%95%8C%E9%9D%A2%EF%BC%9A">http://127.0.0.1:8000/，可以看到如下界面：</a></p><img src="/2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day2%EF%BC%9ADjango%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/screely-1623000895256.png" class="">]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django CRM实战|Day1：开发环境安装</title>
      <link href="2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day1%EF%BC%9A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/"/>
      <url>2021/06/19/Django-CRM%E5%AE%9E%E6%88%98-Day1%EF%BC%9A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>IDE和数据库的安装。</p><span id="more"></span><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><hr><p>这个项目起因是一门专业课的疯狂作业。小组成员几乎没有代码基础，而我此前也是完全没有接触过Django这个框架也几乎没有前端知识，所以边学边实操边记，把笔记分享给同学一起学习，既然记了也就顺手发到博客上。</p><p>但因为完全是目的导向的学习，对框架本身的底层理解一定基础不牢，因此可能出现一些完全不合理的操作，逻辑上的错乱也难以避免，如果有人不幸被演算法引导到此处，参考前还请思量每一步是否合理必要，如果有建议也非常感谢告知给我。</p><h1 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h1><hr><p>下载并安装Pycharm<strong>专业版</strong>：</p><p><a href="https://www.jetbrains.com/pycharm/download/#section=windows">Download PyCharm: Python IDE for Professional Developers by JetBrains</a></p><p>当然除了IDE外要保证你的电脑里有可以正常运行的Python，具体的安装教程请自行搜索。</p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><hr><p>windows按照如下方法安装mysql：</p><p><a href="https://zhuanlan.zhihu.com/p/37152572">超级详细的mysql数据库安装指南</a></p><p>mysql是后端的数据引擎，安装完成后可以在丑丑的cmd界面用sql语言进行操作，当然也可以参考如下教程安装有图形界面的客户端进行操作。</p><p><a href="https://zhuanlan.zhihu.com/p/37155150">客户端navicat安装教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TV_Head的第一篇blog</title>
      <link href="2021/05/24/TV-Head%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/"/>
      <url>2021/05/24/TV-Head%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87blog/</url>
      
        <content type="html"><![CDATA[<p>写这个博客的原因和部署个人博客时遇到的一些问题。</p><span id="more"></span><h1 id="写这个博客的原因"><a href="#写这个博客的原因" class="headerlink" title="写这个博客的原因"></a>写这个博客的原因</h1><hr><p>对于写代码一事向来是应用导向，C/JAVA/Python以及其他工具语言等等，都是先学个最最基础，能看懂基本语句并且了解语言逻辑之后就不再深入，到需要用的时候再从搜索引擎上胡乱抓来，导致和别人介绍起时什么都学过，也确实完成过些项目做出些东西，但也全都基础不牢。比如前天面试一家初创企业时被问到Python中的「global」函数都茫然，当即想挂掉电话以后永远不承认自己面过技术岗。<br>同样是这一次面试，被问到有没有任何技术博客或者github上自己的项目。屡次想到要开一个博客至少管理一下鸡零狗碎的代码，之前也在博客园开了一个主页，然而发布了几篇当时在做的爬虫项目后就没有继续坚持下来，后来整整一个学年，再写的代码写完就丢。<br>现在研一快结束，因为现实的种种原因确定不再做研究。原先假借「还没决定好就业还是读博」之名，舒舒服服地悬在云端，突然之间被抛到激烈竞争的市场当中，实体化为千万颗白菜中的一颗任人挑拣，被无声地turndown多次，才发现自己混了五年原来身无长物，于是乎最近一段时间一度焦虑过头。<br>好在寻寻觅觅终于还是找到一个相对满意的暑期实习，预期来看可算我转做技术的一个起点（hopefully），想到在这期间也许会学习一些新的工具或经手一些项目，也许不乏东西可记，因此费尽周章开了这个博客，希望除了系统性地回顾和梳理经手的项目外，还能让我动笔写些东西。</p><h1 id="Hexo-Github-Pages部署时遇到的问题"><a href="#Hexo-Github-Pages部署时遇到的问题" class="headerlink" title="Hexo + Github Pages部署时遇到的问题"></a>Hexo + Github Pages部署时遇到的问题</h1><hr><p>这部分介绍部署博客时踩到的坑，原本以为应该两三个小时可以解决，没想到花费了一整天才部署好一个功能正常的博客。这过程中参考的文档众多，关于博客部署主要是这篇：<br><a href="https://segmentfault.com/a/1190000023346633">保姆级——小白如何搭建自己的博客（Hexo+Github Pages）</a></p><h2 id="SSH配置问题"><a href="#SSH配置问题" class="headerlink" title="SSH配置问题"></a>SSH配置问题</h2><p>通过Hexo部署博客内容到Github Pages涉及到身份认证过程，我将博客的本地仓库搭建在D盘，所以一开始通过以下代码配置SSH秘钥时也没有使用默认路径。虽然配置成功，但后面进行登录认证时一直返回<code>publicly denied</code>。尝试了各种方法没有依然有同样的问题，最终重新在默认路径配置了SSH秘钥才通过验证。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> $ ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]</span><br></pre></td></tr></table></figure><h2 id="Hexo本地端口预览正常，deploy到github之后再username-github-io地址不显示主题的问题"><a href="#Hexo本地端口预览正常，deploy到github之后再username-github-io地址不显示主题的问题" class="headerlink" title="Hexo本地端口预览正常，deploy到github之后再username.github.io地址不显示主题的问题"></a>Hexo本地端口预览正常，deploy到github之后再username.github.io地址不显示主题的问题</h2><p>这个真的是大坑，需要说明的是我出现的问题不只是主题控件不显示，包括我自己的一些文件如<strong>文章、图片的修改</strong>等也需要多次deploy后才能显示。翻了无数文章帖子，提出可能是以下原因：  </p><ol><li>需要进行<code>hexo clean</code>。<br>无法解决。</li><li>删除本地<code>deploy_git</code>文件后重新<code>hexo clean -g -d</code>。<br>同样无法解决。</li><li><a href="https://www.zhihu.com/question/319817323/answer/649343660">知乎</a><strong>Erain</strong>答主提到将<code>/username.github/io</code>添加到根目录的<code>_config.yml</code>中的<code>root</code>标签中。<br>这个操作可以解决CSS文件无法每次都成功上传的问题，但即使仓库内的文件全都是新上传的网页依旧无法正常显示。</li></ol><p><strong>最后的解决办法</strong><br>被这个问题纠缠了整个晚上，最终重开了一个路径重头初始化Hexo。。。一切正常。<br>无论如何终于搭建好一个还能用的博客。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
